<launch>

    <group ns="dataglove_params">
        <rosparam file="$(find dataglove)/config/params.yaml" />
    </group>
    <!-- memorandum: use the <rosparam> tag with the “file” argument to load all parameters from the YAML file. 
    You don’t even need to give an absolute path: by using $(find my_package), ROS will automatically get the path to your package -->
    <arg name="obj" default="data" />
    <!-- argument to be passed to the glove data getter. It will be used to name the bag file. -->
                            <!-- FOR DEBUGGING: -->
    <node name="node_raw_dataglove" pkg="dataglove" type="node_raw_dataglove.py" output="screen" args="record"/>
    <!-- publisher: takes the data stream from the glove and publishes it as a ROS topic. -->

    <node name="node_data_to_models" pkg="dataglove" type="node_data_to_models.py" output="screen"  args="record"/> 
    <!-- subscriber: takes the data stream from the glove and sends it to the classifier -->

    <!-- subscribers that get the data stream and pass it to the models for testing  -->
    <!-- Subscriber model 1 -->
    <node name="node_sron" pkg="dataglove" type="node_sron.py" output="screen" launch-prefix="xterm -e"/>


     <!-- Subscriber model 2 -->
    <node name="node_lsm" pkg="dataglove" type="node_lsm.py" output="screen" launch-prefix="xterm -e"/>


    <!-- Subscriber model 3 -->
    <node name="node_snn" pkg="dataglove" type="node_snn.py" output="screen" launch-prefix="xterm -e"/>


    <node pkg="rosbag" type="record" name="rosbag_record" respawn="true" output="screen" args="-o $(find dataglove)/bags/$(arg obj) /glove_data" />
    <!-- recording the data automatically in a .bag file -->
    
</launch>
